---
description: 
globs: 
alwaysApply: true
---
üéØ Objective:
To build a mobile application that helps users monitor and improve their daily wellness habits‚Äîhydration, sleep, exercise, and stress‚Äîby integrating automatic data collection, manual logging, reminders, and data visualization. The app should be simple, non-intrusive, and highly user-friendly.

üåç SDG Alignment:
The app directly supports UN Sustainable Development Goal 3: Good Health and Well-Being, by encouraging users to adopt and maintain healthy lifestyle habits through digital self-monitoring.

üîß Core Features:
1. User Onboarding
Simple sign-up/login via email or Google using Firebase Authentication

Initial permissions: Google Fit access, push notifications, and data sync setup

2. Google Fit Integration
Automatically fetch:

Sleep data: Total sleep duration and quality

Exercise data: Step count, workout duration, and active minutes

Sync occurs on app launch and periodically in the background

3. Manual Logging
Water Intake: Log in cups/ml via a simple plus/minus interface or slider

Stress Level / Mood: Select from emojis or a slider (calm to stressed)

Entries are timestamped and saved to local storage (AsyncStorage/SQLite) and synced to Firebase

4. Personalized Reminders
Smart, scheduled notifications for:

Drinking water (e.g., every 2 hours)

Taking breaks / stretching

Wind-down time for sleep

Reminders can be customized in settings (frequency, time range, tone)

5. Dashboard & Data Visualization
Overview of the day‚Äôs progress:

Water intake vs goal

Sleep duration vs target

Steps taken

Stress trend (emoji/mood-based chart)

Weekly view: Trends in line/bar/pie charts using Victory Native or Recharts

6. Settings & Preferences
Customize:

Daily goals (water intake, sleep hours, step count)

Notification preferences

Light/Dark theme toggle

7. MVP Scope
Google Fit integration (Sleep + Exercise)

Manual water + stress logging

Daily reminders

Progress dashboard with basic charts

Firebase for backend (auth + data sync)

üñ•Ô∏è Technologies & Libraries
Frontend: React Native, React Navigation, Context API / Redux

Backend: Firebase (Authentication + Firestore), AsyncStorage / SQLite

APIs: Google Fit REST API (OAuth2.0 auth flow)

Notifications: Expo Notifications / Firebase Cloud Messaging (FCM)

Charts: Victory Native / Recharts

Development Tools: Expo CLI, Visual Studio Code, Android Studio for testing